package cs555.overlay.wireformats;

public interface Protocol {
	// REGISTERING CHUNK SERVERS
	static byte CHUNK_SERVER_SENDS_REGISTRATION = 1; // DONE // DONE
	static byte CONTROLLER_REPORTS_CHUNK_SERVER_REGISTRATION_STATUS = 2; // DONE // DONE
	static byte CHUNK_SERVER_SENDS_DEREGISTRATION = 3; // DONE // DONE
	// MISSING NUMBER 5
	
	// STORING, DELETING CHUNKS AND SHARDS
	static byte CLIENT_REQUESTS_STORE_CHUNK = 4; // DONE
	static byte CONTROLLER_SENDS_CLIENT_VALID_CHUNK_SERVERS = 5; // DONE
	static byte CONTROLLER_DENIES_STORAGE_REQUEST = 6; // WILL SEND FOR EITHER CHUNKS OR SHARDS // DONE
	static byte CLIENT_REQUESTS_STORE_SHARDS = 7; // DONE
	static byte CONTROLLER_SENDS_CLIENT_VALID_SHARD_SERVERS = 8; // DONE
	static byte CLIENT_REQUESTS_FILE_DELETE = 9; // DONE
	static byte CONTROLLER_APPROVES_FILE_DELETE = 10; // DONE
	static byte CONTROLLER_REQUESTS_FILE_DELETE = 11; // DONE
	static byte CHUNK_SERVER_ACKNOWLEDGES_FILE_DELETE = 23; // DONE // DONE

	// SENDING DATA FOR STORAGE
	static byte SENDS_FILE_FOR_STORAGE = 12; // DONE
	static byte CHUNK_SERVER_ACKNOWLEDGES_FILE_FOR_STORAGE = 24; // DONE
	
	// RETRIEVING DATA FROM STORAGE
	static byte REQUESTS_CHUNK = 13; // DONE // MAY REQUIRE FILEDISTRIBUTIONSERVICE IF CORRUPT
	static byte REQUESTS_SHARD = 14; // DONE // MAY REQUIRE FILEDISTRIBUTIONSERVICE IF CORRUPT
	static byte CHUNK_SERVER_DENIES_REQUEST = 15; // DONE // DENY IF FILE IS UNAVAILABLE OR CORRUPT
	static byte CHUNK_SERVER_SERVES_FILE = 16; // DONE
	static byte CLIENT_REQUESTS_FILE_SIZE = 30; // DONE
	static byte CONTROLLER_REPORTS_FILE_SIZE = 32; // DONE
	static byte CLIENT_REQUESTS_FILE_STORAGE_INFO = 31; // DONE

	// HEARTBEAT MESSAGES
	static byte CHUNK_SERVER_SENDS_HEARTBEAT = 17; // DONE
	static byte CONTROLLER_SENDS_HEARTBEAT = 18; // DONE
	static byte CHUNK_SERVER_RESPONDS_TO_HEARTBEAT = 19; // DONE

	// FILE CORRUPTION
	static byte CHUNK_SERVER_REPORTS_FILE_CORRUPTION = 20; // DONE // WON'T COME FROM TCPRECEIVERTHREAD, WILL ONLY COME FROM FILEDISTRIBUTIONSERVICE
	static byte CONTROLLER_SENDS_STORAGE_LIST = 21; // DONE // WILL ONLY APPEAR IN FILEDISTRIBUTIONSERVICE
	//static byte CONTROLLER_REQUESTS_FILE_FORWARD = 22; // DONE // WILL USE FILEDISTRIBUTIONSERVICE // WILL BE SENT TO ALL CAPABLE NODES
	//static byte CHUNK_SERVER_ACKNOWLEDGES_FILE_FORWARD = 25; // DONE
	static byte CONTROLLER_REQUESTS_FILE_ACQUIRE = 22; // DONE // WILL USE FILEDISTRIBUTIONSERVICE // WILL BE SENT TO ALL CAPABLE NODES
	static byte CHUNK_SERVER_ACKNOWLEDGES_FILE_ACQUIRE = 25; // DONE
	static byte CHUNK_SERVER_NO_STORE_FILE = 26; // DONE
	static byte CHUNK_SERVER_SERVES_SLICES = 27; // DONE
	static byte REQUESTS_SLICES = 28; // DONE
	static byte CHUNK_SERVER_REPORTS_FILE_FIX = 29; // DONE
	static byte CHUNK_SERVER_REQUESTS_FILE = 35; // DONE
	// CONTROLLER_REQUESTS_FILE_FORWARD WILL MAKE THE CHUNK SERVER SEND 'SENDS_FILE_FOR_STORAGE' MESSAGES
	// TO THE CHUNK SERVER IT IS FORWARDING A FILE TO
	// If the controller receives this message, check to see if the chunk server is healthy.
	// Add to list of possible corrupt files. (Maybe)

	// LISTING INFORMATION
	static byte CLIENT_REQUESTS_FILE_LIST = 33; // DONE
	static byte CONTROLLER_SENDS_FILE_LIST = 34; // DONE

	// LABELS
	static String CHUNK_SERVER_SENDS_REGISTRATION_LABEL = "CHUNK_SERVER_SENDS_REGISTRATION";
	static String CONTROLLER_REPORTS_CHUNK_SERVER_REGISTRATION_STATUS_LABEL = "CONTROLLER_REPORTS_CHUNK_SERVER_REGISTRATION_STATUS";
	static String CHUNK_SERVER_SENDS_DEREGISTRATION_LABEL = "CHUNK_SERVER_SENDS_DEREGISTRATION";
	static String CLIENT_REQUESTS_STORE_CHUNK_LABEL = "CLIENT_REQUESTS_STORE_CHUNK";
	static String CONTROLLER_SENDS_CLIENT_VALID_CHUNK_SERVERS_LABEL = "CONTROLLER_SENDS_CLIENT_VALID_CHUNK_SERVERS";
	static String CONTROLLER_DENIES_STORAGE_REQUEST_LABEL = "CONTROLLER_DENIES_STORAGE_REQUEST";
	static String CLIENT_REQUESTS_STORE_SHARDS_LABEL = "CLIENT_REQUESTS_STORE_SHARDS";
	static String CONTROLLER_SENDS_CLIENT_VALID_SHARD_SERVERS_LABEL = "CONTROLLER_SENDS_CLIENT_VALID_SHARD_SERVERS";
	static String CLIENT_REQUESTS_FILE_DELETE_LABEL = "CLIENT_REQUESTS_FILE_DELETE";
	static String CONTROLLER_REQUESTS_FILE_DELETE_LABEL = "CONTROLLER_REQUESTS_FILE_DELETE";
	static String CHUNK_SERVER_SENDS_HEARTBEAT_LABEL = "CHUNK_SERVER_SENDS_HEARTBEAT";
	static String CONTROLLER_SENDS_HEARTBEAT_LABEL = "CONTROLLER_SENDS_HEARTBEAT";
	static String CHUNK_SERVER_RESPONDS_TO_HEARTBEAT_LABEL = "CHUNK_SERVER_RESPONDS_TO_HEARTBEAT";
	static String CHUNK_SERVER_REPORTS_FILE_CORRUPTION_LABEL = "CHUNK_SERVER_REPORTS_FILE_CORRUPTION";
	static String CONTROLLER_SENDS_CHUNK_SERVER_STORAGE_LIST_LABEL = "CONTROLLER_SENDS_CHUNK_SERVER_STORAGE_LIST";
	static String CONTROLLER_REQUESTS_FILE_FORWARD_LABEL = "CONTROLLER_REQUESTS_FILE_FORWARD";
	static String REQUESTS_CHUNK_LABEL = "REQUESTS_CHUNK";
	static String REQUESTS_SHARD_LABEL = "REQUESTS_SHARD";
	static String CHUNK_SERVER_DENIES_REQUEST_LABEL = "CHUNK_SERVER_DENIES_REQUEST";
	static String CHUNK_SERVER_SERVES_FILE_LABEL = "CHUNK_SERVER_SERVES_FILE";
	static String SENDS_FILE_FOR_STORAGE_LABEL = "SENDS_FILE_FOR_STORAGE";
	static String CONTROLLER_APPROVES_FILE_DELETE_LABEL = "CONTROLLER_APPROVES_FILE_DELETE";
	//static String _LABEL = "";
}