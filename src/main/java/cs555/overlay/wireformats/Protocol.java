package cs555.overlay.wireformats;

public interface Protocol {
  // REGISTERING CHUNK SERVERS
  byte CHUNK_SERVER_SENDS_REGISTRATION = 1; // DONE // DONE
  byte CONTROLLER_REPORTS_CHUNK_SERVER_REGISTRATION_STATUS = 2;
  // DONE // DONE
  byte CHUNK_SERVER_SENDS_DEREGISTRATION = 3; // DONE // DONE
  // MISSING NUMBER 5

  // STORING, DELETING CHUNKS AND SHARDS
  byte CLIENT_STORE = 4; // DONE
  byte CONTROLLER_DENIES_STORAGE_REQUEST = 6;
  // WILL SEND FOR EITHER CHUNKS OR SHARDS // DONE
  byte CONTROLLER_RESERVES_SERVERS = 8;
  byte CLIENT_REQUESTS_FILE_DELETE = 9; // DONE
  byte CONTROLLER_APPROVES_FILE_DELETE = 10; // DONE
  byte CONTROLLER_REQUESTS_FILE_DELETE = 11; // DONE
  byte CHUNK_SERVER_ACKNOWLEDGES_FILE_DELETE = 23; // DONE // DONE

  // SENDING DATA FOR STORAGE
  byte SENDS_FILE_FOR_STORAGE = 12; // DONE
  byte CHUNK_SERVER_ACKNOWLEDGES_FILE_FOR_STORAGE = 24; // DONE

  // RETRIEVING DATA FROM STORAGE
  byte REQUEST_FILE = 13;
  byte CHUNK_SERVER_DENIES_REQUEST = 15;
  // DONE // DENY IF FILE IS UNAVAILABLE OR CORRUPT
  byte CHUNK_SERVER_SERVES_FILE = 16; // DONE
  byte CLIENT_REQUESTS_FILE_SIZE = 30; // DONE
  byte CONTROLLER_REPORTS_FILE_SIZE = 32; // DONE
  byte CLIENT_REQUESTS_FILE_STORAGE_INFO = 31; // DONE

  // HEARTBEAT MESSAGES
  byte CHUNK_SERVER_SENDS_HEARTBEAT = 17; // DONE
  byte CONTROLLER_SENDS_HEARTBEAT = 18; // DONE
  byte CHUNK_SERVER_RESPONDS_TO_HEARTBEAT = 19; // DONE

  // FILE CORRUPTION
  byte CHUNK_SERVER_REPORTS_FILE_CORRUPTION = 20;
  // DONE // WON'T COME FROM TCPRECEIVERTHREAD, WILL ONLY COME FROM
  // FILEDISTRIBUTIONSERVICE
  byte CONTROLLER_SENDS_STORAGE_LIST = 21;
  // DONE // WILL ONLY APPEAR IN FILEDISTRIBUTIONSERVICE
  //static byte CONTROLLER_REQUESTS_FILE_FORWARD = 22; // DONE // WILL USE
  // FILEDISTRIBUTIONSERVICE // WILL BE SENT TO ALL CAPABLE NODES
  //static byte CHUNK_SERVER_ACKNOWLEDGES_FILE_FORWARD = 25; // DONE
  byte CONTROLLER_REQUESTS_FILE_ACQUIRE = 22;
  // DONE // WILL USE FILEDISTRIBUTIONSERVICE // WILL BE SENT TO ALL
  // CAPABLE NODES
  byte CHUNK_SERVER_ACKNOWLEDGES_FILE_ACQUIRE = 25; // DONE
  byte CHUNK_SERVER_NO_STORE_FILE = 26; // DONE
  byte CHUNK_SERVER_SERVES_SLICES = 27; // DONE
  byte CHUNK_SERVER_REPORTS_FILE_FIX = 29; // DONE
  byte CHUNK_SERVER_REQUESTS_FILE = 35; // DONE
  // CONTROLLER_REQUESTS_FILE_FORWARD WILL MAKE THE CHUNK SERVER SEND
  // 'SENDS_FILE_FOR_STORAGE' MESSAGES
  // TO THE CHUNK SERVER IT IS FORWARDING A FILE TO
  // If the controller receives this message, check to see if the chunk
  // server is healthy.
  // Add to list of possible corrupt files. (Maybe)
  byte REPAIR_SHARD = 40;
  byte REPAIR_CHUNK = 41;
  //static String _LABEL = "";

  // LISTING INFORMATION
  byte CLIENT_REQUESTS_FILE_LIST = 33; // DONE
  byte CONTROLLER_SENDS_FILE_LIST = 34; // DONE

}